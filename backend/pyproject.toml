[tool.poetry]
name = "petproject"
version = "0.1.0"
description = ""
authors = ["Krak3nDev <lovekuchernazarlove@gmail.com>"]
readme = "README.md"
packages = [
    { include = "cryptoapp", from = "src" }
]

[tool.poetry.dependencies]
python = "^3.12"

[tool.poetry.group.dev.dependencies]
black = "^24.8.0"
ruff = "^0.5.7"
mypy = "^1.11.1"
ruff-lsp = "^0.0.54"


[tool.poetry.group.api.dependencies]
fastapi = "^0.110.3"
uvicorn = "^0.30.5"
aiohttp = "^3.10.1"
logging = "^0.4.9.6"
backoff = "^2.2.1"
ujson = "^5.10.0"
betterlogging = "^1.0.0"
alembic = "^1.13.2"
asyncpg = "^0.29.0"
environs = "^11.0.0"
sqlalchemy = { extras = ["mypy"], version = "^2.0.32" }
dishka = "^1.2.0"
pydantic = { extras = ["email"], version = "^2.8.2" }
python-multipart = "^0.0.9"
pyjwt = { extras = ["crypto"], version = "^2.9.0" }
bcrypt = "^4.2.0"
aiosmtplib = "^3.0.2"
aioredis = "^2.0.1"



[tool.black]
line_length = 99
exclude = "\\.?venv|\\.cache"

[tool.mypy]
ignore_missing_imports = true
disallow_subclassing_any = false
strict = true
plugins = [
    "sqlalchemy.ext.mypy.plugin",
    "pydantic.mypy",
]
exclude = [
    ".git",
    ".venv",
    ".idea",
    ".tests",
    ".cache",
    "build",
    "dist",
    "scripts",
]

[tool.ruff]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

line-length = 88
indent-width = 4

target-version = "py312"
[tool.ruff.lint]

select = ["E4", "E7", "E9", "F", "I"]
ignore = []
fixable = ["ALL"]
unfixable = []
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = false
docstring-code-line-length = "dynamic"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

